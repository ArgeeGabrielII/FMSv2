//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp_FMS_V2.wcfFMSv2 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="wcfFMSv2.IFMSV2")]
    public interface IFMSV2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_ViewAllRequest", ReplyAction="http://tempuri.org/IFMSV2/Get_ViewAllRequestResponse")]
        string Get_ViewAllRequest(string _Parameter, int UserID, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_ViewAllRequest", ReplyAction="http://tempuri.org/IFMSV2/Get_ViewAllRequestResponse")]
        System.Threading.Tasks.Task<string> Get_ViewAllRequestAsync(string _Parameter, int UserID, string Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_DraftRequests", ReplyAction="http://tempuri.org/IFMSV2/Get_DraftRequestsResponse")]
        string Get_DraftRequests(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_DraftRequests", ReplyAction="http://tempuri.org/IFMSV2/Get_DraftRequestsResponse")]
        System.Threading.Tasks.Task<string> Get_DraftRequestsAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_RequestHeader", ReplyAction="http://tempuri.org/IFMSV2/Get_RequestHeaderResponse")]
        string Get_RequestHeader(string _RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_RequestHeader", ReplyAction="http://tempuri.org/IFMSV2/Get_RequestHeaderResponse")]
        System.Threading.Tasks.Task<string> Get_RequestHeaderAsync(string _RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Add_RequestHeader", ReplyAction="http://tempuri.org/IFMSV2/Add_RequestHeaderResponse")]
        string Add_RequestHeader(int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Add_RequestHeader", ReplyAction="http://tempuri.org/IFMSV2/Add_RequestHeaderResponse")]
        System.Threading.Tasks.Task<string> Add_RequestHeaderAsync(int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_RequestLines_ForVerify", ReplyAction="http://tempuri.org/IFMSV2/Get_RequestLines_ForVerifyResponse")]
        string Get_RequestLines_ForVerify(int _RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_RequestLines_ForVerify", ReplyAction="http://tempuri.org/IFMSV2/Get_RequestLines_ForVerifyResponse")]
        System.Threading.Tasks.Task<string> Get_RequestLines_ForVerifyAsync(int _RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_RequestLines_ForAudit", ReplyAction="http://tempuri.org/IFMSV2/Get_RequestLines_ForAuditResponse")]
        string Get_RequestLines_ForAudit(int _RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_RequestLines_ForAudit", ReplyAction="http://tempuri.org/IFMSV2/Get_RequestLines_ForAuditResponse")]
        System.Threading.Tasks.Task<string> Get_RequestLines_ForAuditAsync(int _RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_RequestLines_ForClosing", ReplyAction="http://tempuri.org/IFMSV2/Get_RequestLines_ForClosingResponse")]
        string Get_RequestLines_ForClosing(int _RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_RequestLines_ForClosing", ReplyAction="http://tempuri.org/IFMSV2/Get_RequestLines_ForClosingResponse")]
        System.Threading.Tasks.Task<string> Get_RequestLines_ForClosingAsync(int _RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/GetUserPass", ReplyAction="http://tempuri.org/IFMSV2/GetUserPassResponse")]
        string GetUserPass(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/GetUserPass", ReplyAction="http://tempuri.org/IFMSV2/GetUserPassResponse")]
        System.Threading.Tasks.Task<string> GetUserPassAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_UserAccessRights", ReplyAction="http://tempuri.org/IFMSV2/Get_UserAccessRightsResponse")]
        string Get_UserAccessRights(int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_UserAccessRights", ReplyAction="http://tempuri.org/IFMSV2/Get_UserAccessRightsResponse")]
        System.Threading.Tasks.Task<string> Get_UserAccessRightsAsync(int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_UserAccount", ReplyAction="http://tempuri.org/IFMSV2/Get_UserAccountResponse")]
        string Get_UserAccount(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_UserAccount", ReplyAction="http://tempuri.org/IFMSV2/Get_UserAccountResponse")]
        System.Threading.Tasks.Task<string> Get_UserAccountAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_UserGroups", ReplyAction="http://tempuri.org/IFMSV2/Get_UserGroupsResponse")]
        string Get_UserGroups(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_UserGroups", ReplyAction="http://tempuri.org/IFMSV2/Get_UserGroupsResponse")]
        System.Threading.Tasks.Task<string> Get_UserGroupsAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_GroupRights", ReplyAction="http://tempuri.org/IFMSV2/Get_GroupRightsResponse")]
        string Get_GroupRights(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_GroupRights", ReplyAction="http://tempuri.org/IFMSV2/Get_GroupRightsResponse")]
        System.Threading.Tasks.Task<string> Get_GroupRightsAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_GroupRights_Requisition", ReplyAction="http://tempuri.org/IFMSV2/Get_GroupRights_RequisitionResponse")]
        string Get_GroupRights_Requisition(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_GroupRights_Requisition", ReplyAction="http://tempuri.org/IFMSV2/Get_GroupRights_RequisitionResponse")]
        System.Threading.Tasks.Task<string> Get_GroupRights_RequisitionAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_Office", ReplyAction="http://tempuri.org/IFMSV2/Get_OfficeResponse")]
        string Get_Office(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_Office", ReplyAction="http://tempuri.org/IFMSV2/Get_OfficeResponse")]
        System.Threading.Tasks.Task<string> Get_OfficeAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_Departments", ReplyAction="http://tempuri.org/IFMSV2/Get_DepartmentsResponse")]
        string Get_Departments(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_Departments", ReplyAction="http://tempuri.org/IFMSV2/Get_DepartmentsResponse")]
        System.Threading.Tasks.Task<string> Get_DepartmentsAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_DepartmentApprover", ReplyAction="http://tempuri.org/IFMSV2/Get_DepartmentApproverResponse")]
        string Get_DepartmentApprover(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_DepartmentApprover", ReplyAction="http://tempuri.org/IFMSV2/Get_DepartmentApproverResponse")]
        System.Threading.Tasks.Task<string> Get_DepartmentApproverAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_Supplier", ReplyAction="http://tempuri.org/IFMSV2/Get_SupplierResponse")]
        string Get_Supplier(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_Supplier", ReplyAction="http://tempuri.org/IFMSV2/Get_SupplierResponse")]
        System.Threading.Tasks.Task<string> Get_SupplierAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_Currency", ReplyAction="http://tempuri.org/IFMSV2/Get_CurrencyResponse")]
        string Get_Currency(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_Currency", ReplyAction="http://tempuri.org/IFMSV2/Get_CurrencyResponse")]
        System.Threading.Tasks.Task<string> Get_CurrencyAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_PaymentMode", ReplyAction="http://tempuri.org/IFMSV2/Get_PaymentModeResponse")]
        string Get_PaymentMode(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_PaymentMode", ReplyAction="http://tempuri.org/IFMSV2/Get_PaymentModeResponse")]
        System.Threading.Tasks.Task<string> Get_PaymentModeAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_PaymentTerm", ReplyAction="http://tempuri.org/IFMSV2/Get_PaymentTermResponse")]
        string Get_PaymentTerm(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_PaymentTerm", ReplyAction="http://tempuri.org/IFMSV2/Get_PaymentTermResponse")]
        System.Threading.Tasks.Task<string> Get_PaymentTermAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_VesselDepartment", ReplyAction="http://tempuri.org/IFMSV2/Get_VesselDepartmentResponse")]
        string Get_VesselDepartment(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_VesselDepartment", ReplyAction="http://tempuri.org/IFMSV2/Get_VesselDepartmentResponse")]
        System.Threading.Tasks.Task<string> Get_VesselDepartmentAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_VesselType", ReplyAction="http://tempuri.org/IFMSV2/Get_VesselTypeResponse")]
        string Get_VesselType(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_VesselType", ReplyAction="http://tempuri.org/IFMSV2/Get_VesselTypeResponse")]
        System.Threading.Tasks.Task<string> Get_VesselTypeAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_FlagRegistration", ReplyAction="http://tempuri.org/IFMSV2/Get_FlagRegistrationResponse")]
        string Get_FlagRegistration(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_FlagRegistration", ReplyAction="http://tempuri.org/IFMSV2/Get_FlagRegistrationResponse")]
        System.Threading.Tasks.Task<string> Get_FlagRegistrationAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_PageModules", ReplyAction="http://tempuri.org/IFMSV2/Get_PageModulesResponse")]
        string Get_PageModules(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_PageModules", ReplyAction="http://tempuri.org/IFMSV2/Get_PageModulesResponse")]
        System.Threading.Tasks.Task<string> Get_PageModulesAsync(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_RequestHeader", ReplyAction="http://tempuri.org/IFMSV2/Save_RequestHeaderResponse")]
        void Save_RequestHeader(int RequestID, string RequestStatus, int VesselID, string RequestDate, string DateNeeded, string ItemFor, string Notify, string DeliverTo, string Remarks, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_RequestHeader", ReplyAction="http://tempuri.org/IFMSV2/Save_RequestHeaderResponse")]
        System.Threading.Tasks.Task Save_RequestHeaderAsync(int RequestID, string RequestStatus, int VesselID, string RequestDate, string DateNeeded, string ItemFor, string Notify, string DeliverTo, string Remarks, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_UserAccounts", ReplyAction="http://tempuri.org/IFMSV2/Save_UserAccountsResponse")]
        void Save_UserAccounts(int UserID, string UserName, string Password, string FirstName, string LastName, int GroupID, string EmailAddress, string Office, int DepartmentID, bool Active, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_UserAccounts", ReplyAction="http://tempuri.org/IFMSV2/Save_UserAccountsResponse")]
        System.Threading.Tasks.Task Save_UserAccountsAsync(int UserID, string UserName, string Password, string FirstName, string LastName, int GroupID, string EmailAddress, string Office, int DepartmentID, bool Active, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_UserGroups", ReplyAction="http://tempuri.org/IFMSV2/Save_UserGroupsResponse")]
        void Save_UserGroups(int ID, string GroupName, string Description, bool Active, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_UserGroups", ReplyAction="http://tempuri.org/IFMSV2/Save_UserGroupsResponse")]
        System.Threading.Tasks.Task Save_UserGroupsAsync(int ID, string GroupName, string Description, bool Active, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_GroupRights", ReplyAction="http://tempuri.org/IFMSV2/Save_GroupRightsResponse")]
        void Save_GroupRights(int GroupRightID, int GroupID, int ModuleID, bool CanView, bool CanEdit, bool CanDelete, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_GroupRights", ReplyAction="http://tempuri.org/IFMSV2/Save_GroupRightsResponse")]
        System.Threading.Tasks.Task Save_GroupRightsAsync(int GroupRightID, int GroupID, int ModuleID, bool CanView, bool CanEdit, bool CanDelete, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_GroupRights_Requisition", ReplyAction="http://tempuri.org/IFMSV2/Save_GroupRights_RequisitionResponse")]
        void Save_GroupRights_Requisition(int GroupRightRequestID, int GroupID, int RequestProcessID, bool CanView, bool CanEdit, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_GroupRights_Requisition", ReplyAction="http://tempuri.org/IFMSV2/Save_GroupRights_RequisitionResponse")]
        System.Threading.Tasks.Task Save_GroupRights_RequisitionAsync(int GroupRightRequestID, int GroupID, int RequestProcessID, bool CanView, bool CanEdit, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_Department", ReplyAction="http://tempuri.org/IFMSV2/Save_DepartmentResponse")]
        void Save_Department(int DepartmentID, string DepartmentName, int ManilaApproverID1, int ManilaApproverID2, int GenSanApproverID1, int GenSanApproverID2, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_Department", ReplyAction="http://tempuri.org/IFMSV2/Save_DepartmentResponse")]
        System.Threading.Tasks.Task Save_DepartmentAsync(int DepartmentID, string DepartmentName, int ManilaApproverID1, int ManilaApproverID2, int GenSanApproverID1, int GenSanApproverID2, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_Currency", ReplyAction="http://tempuri.org/IFMSV2/Save_CurrencyResponse")]
        void Save_Currency(int CurrencyID, string CurrencyCode, string CurrencyName, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_Currency", ReplyAction="http://tempuri.org/IFMSV2/Save_CurrencyResponse")]
        System.Threading.Tasks.Task Save_CurrencyAsync(int CurrencyID, string CurrencyCode, string CurrencyName, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_Supplier", ReplyAction="http://tempuri.org/IFMSV2/Save_SupplierResponse")]
        void Save_Supplier(int SupplierID, string SupplierName, string ContactPerson, string ContactNumber, int CurrencyID, string PaymentTerms, string ModeOfPayment, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_Supplier", ReplyAction="http://tempuri.org/IFMSV2/Save_SupplierResponse")]
        System.Threading.Tasks.Task Save_SupplierAsync(int SupplierID, string SupplierName, string ContactPerson, string ContactNumber, int CurrencyID, string PaymentTerms, string ModeOfPayment, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_VesselDepartment", ReplyAction="http://tempuri.org/IFMSV2/Save_VesselDepartmentResponse")]
        void Save_VesselDepartment(int VesselID, string VesselCode, string VesselName, string VesselType, string FlagRegistration, bool Active, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_VesselDepartment", ReplyAction="http://tempuri.org/IFMSV2/Save_VesselDepartmentResponse")]
        System.Threading.Tasks.Task Save_VesselDepartmentAsync(int VesselID, string VesselCode, string VesselName, string VesselType, string FlagRegistration, bool Active, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_FlagRegistration", ReplyAction="http://tempuri.org/IFMSV2/Save_FlagRegistrationResponse")]
        void Save_FlagRegistration(int FlagID, string FlagName, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_FlagRegistration", ReplyAction="http://tempuri.org/IFMSV2/Save_FlagRegistrationResponse")]
        System.Threading.Tasks.Task Save_FlagRegistrationAsync(int FlagID, string FlagName, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_Office", ReplyAction="http://tempuri.org/IFMSV2/Save_OfficeResponse")]
        void Save_Office(int OfficeID, string OfficeCode, string OfficeName, bool Active, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_Office", ReplyAction="http://tempuri.org/IFMSV2/Save_OfficeResponse")]
        System.Threading.Tasks.Task Save_OfficeAsync(int OfficeID, string OfficeCode, string OfficeName, bool Active, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_PageModules", ReplyAction="http://tempuri.org/IFMSV2/Save_PageModulesResponse")]
        void Save_PageModules(int ModuleID, string ModuleName, string ModuleDescription, string ModuleURL, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_PageModules", ReplyAction="http://tempuri.org/IFMSV2/Save_PageModulesResponse")]
        System.Threading.Tasks.Task Save_PageModulesAsync(int ModuleID, string ModuleName, string ModuleDescription, string ModuleURL, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_PaymentMode", ReplyAction="http://tempuri.org/IFMSV2/Save_PaymentModeResponse")]
        void Save_PaymentMode(int PaymentModeID, string PaymentModeCode, string PaymentMode, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_PaymentMode", ReplyAction="http://tempuri.org/IFMSV2/Save_PaymentModeResponse")]
        System.Threading.Tasks.Task Save_PaymentModeAsync(int PaymentModeID, string PaymentModeCode, string PaymentMode, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_PaymentTerms", ReplyAction="http://tempuri.org/IFMSV2/Save_PaymentTermsResponse")]
        void Save_PaymentTerms(int PaymentTermID, string PaymentTermsCode, string PaymentTerm, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_PaymentTerms", ReplyAction="http://tempuri.org/IFMSV2/Save_PaymentTermsResponse")]
        System.Threading.Tasks.Task Save_PaymentTermsAsync(int PaymentTermID, string PaymentTermsCode, string PaymentTerm, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_VesselType", ReplyAction="http://tempuri.org/IFMSV2/Save_VesselTypeResponse")]
        void Save_VesselType(int VesselTypeID, string VesselType, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_VesselType", ReplyAction="http://tempuri.org/IFMSV2/Save_VesselTypeResponse")]
        System.Threading.Tasks.Task Save_VesselTypeAsync(int VesselTypeID, string VesselType, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Validate_Token", ReplyAction="http://tempuri.org/IFMSV2/Validate_TokenResponse")]
        bool Validate_Token(int UserID, string TokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Validate_Token", ReplyAction="http://tempuri.org/IFMSV2/Validate_TokenResponse")]
        System.Threading.Tasks.Task<bool> Validate_TokenAsync(int UserID, string TokenID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_TransactionLogs", ReplyAction="http://tempuri.org/IFMSV2/Save_TransactionLogsResponse")]
        void Save_TransactionLogs(int UserID, string FormName, string EventName, string ExceptionError, string ComputerName, string IPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Save_TransactionLogs", ReplyAction="http://tempuri.org/IFMSV2/Save_TransactionLogsResponse")]
        System.Threading.Tasks.Task Save_TransactionLogsAsync(int UserID, string FormName, string EventName, string ExceptionError, string ComputerName, string IPAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Trails_UserTrails", ReplyAction="http://tempuri.org/IFMSV2/Trails_UserTrailsResponse")]
        void Trails_UserTrails(int UserID, int RequestID, int RequestLineID, string TransType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Trails_UserTrails", ReplyAction="http://tempuri.org/IFMSV2/Trails_UserTrailsResponse")]
        System.Threading.Tasks.Task Trails_UserTrailsAsync(int UserID, int RequestID, int RequestLineID, string TransType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_UserTrails", ReplyAction="http://tempuri.org/IFMSV2/Get_UserTrailsResponse")]
        string Get_UserTrails(string RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_UserTrails", ReplyAction="http://tempuri.org/IFMSV2/Get_UserTrailsResponse")]
        System.Threading.Tasks.Task<string> Get_UserTrailsAsync(string RequestID, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_TransactionLogs", ReplyAction="http://tempuri.org/IFMSV2/Get_TransactionLogsResponse")]
        string Get_TransactionLogs(string _Parameter, int _UserID, string _Token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFMSV2/Get_TransactionLogs", ReplyAction="http://tempuri.org/IFMSV2/Get_TransactionLogsResponse")]
        System.Threading.Tasks.Task<string> Get_TransactionLogsAsync(string _Parameter, int _UserID, string _Token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFMSV2Channel : WebApp_FMS_V2.wcfFMSv2.IFMSV2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FMSV2Client : System.ServiceModel.ClientBase<WebApp_FMS_V2.wcfFMSv2.IFMSV2>, WebApp_FMS_V2.wcfFMSv2.IFMSV2 {
        
        public FMSV2Client() {
        }
        
        public FMSV2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FMSV2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FMSV2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FMSV2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Get_ViewAllRequest(string _Parameter, int UserID, string Token) {
            return base.Channel.Get_ViewAllRequest(_Parameter, UserID, Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_ViewAllRequestAsync(string _Parameter, int UserID, string Token) {
            return base.Channel.Get_ViewAllRequestAsync(_Parameter, UserID, Token);
        }
        
        public string Get_DraftRequests(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_DraftRequests(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_DraftRequestsAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_DraftRequestsAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_RequestHeader(string _RequestID, int _UserID, string _Token) {
            return base.Channel.Get_RequestHeader(_RequestID, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_RequestHeaderAsync(string _RequestID, int _UserID, string _Token) {
            return base.Channel.Get_RequestHeaderAsync(_RequestID, _UserID, _Token);
        }
        
        public string Add_RequestHeader(int _UserID, string _Token) {
            return base.Channel.Add_RequestHeader(_UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Add_RequestHeaderAsync(int _UserID, string _Token) {
            return base.Channel.Add_RequestHeaderAsync(_UserID, _Token);
        }
        
        public string Get_RequestLines_ForVerify(int _RequestID, int _UserID, string _Token) {
            return base.Channel.Get_RequestLines_ForVerify(_RequestID, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_RequestLines_ForVerifyAsync(int _RequestID, int _UserID, string _Token) {
            return base.Channel.Get_RequestLines_ForVerifyAsync(_RequestID, _UserID, _Token);
        }
        
        public string Get_RequestLines_ForAudit(int _RequestID, int _UserID, string _Token) {
            return base.Channel.Get_RequestLines_ForAudit(_RequestID, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_RequestLines_ForAuditAsync(int _RequestID, int _UserID, string _Token) {
            return base.Channel.Get_RequestLines_ForAuditAsync(_RequestID, _UserID, _Token);
        }
        
        public string Get_RequestLines_ForClosing(int _RequestID, int _UserID, string _Token) {
            return base.Channel.Get_RequestLines_ForClosing(_RequestID, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_RequestLines_ForClosingAsync(int _RequestID, int _UserID, string _Token) {
            return base.Channel.Get_RequestLines_ForClosingAsync(_RequestID, _UserID, _Token);
        }
        
        public string GetUserPass(string Username, string Password) {
            return base.Channel.GetUserPass(Username, Password);
        }
        
        public System.Threading.Tasks.Task<string> GetUserPassAsync(string Username, string Password) {
            return base.Channel.GetUserPassAsync(Username, Password);
        }
        
        public string Get_UserAccessRights(int GroupID) {
            return base.Channel.Get_UserAccessRights(GroupID);
        }
        
        public System.Threading.Tasks.Task<string> Get_UserAccessRightsAsync(int GroupID) {
            return base.Channel.Get_UserAccessRightsAsync(GroupID);
        }
        
        public string Get_UserAccount(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_UserAccount(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_UserAccountAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_UserAccountAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_UserGroups(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_UserGroups(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_UserGroupsAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_UserGroupsAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_GroupRights(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_GroupRights(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_GroupRightsAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_GroupRightsAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_GroupRights_Requisition(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_GroupRights_Requisition(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_GroupRights_RequisitionAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_GroupRights_RequisitionAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_Office(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_Office(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_OfficeAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_OfficeAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_Departments(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_Departments(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_DepartmentsAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_DepartmentsAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_DepartmentApprover(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_DepartmentApprover(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_DepartmentApproverAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_DepartmentApproverAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_Supplier(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_Supplier(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_SupplierAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_SupplierAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_Currency(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_Currency(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_CurrencyAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_CurrencyAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_PaymentMode(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_PaymentMode(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_PaymentModeAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_PaymentModeAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_PaymentTerm(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_PaymentTerm(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_PaymentTermAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_PaymentTermAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_VesselDepartment(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_VesselDepartment(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_VesselDepartmentAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_VesselDepartmentAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_VesselType(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_VesselType(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_VesselTypeAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_VesselTypeAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_FlagRegistration(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_FlagRegistration(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_FlagRegistrationAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_FlagRegistrationAsync(_Parameter, _UserID, _Token);
        }
        
        public string Get_PageModules(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_PageModules(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_PageModulesAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_PageModulesAsync(_Parameter, _UserID, _Token);
        }
        
        public void Save_RequestHeader(int RequestID, string RequestStatus, int VesselID, string RequestDate, string DateNeeded, string ItemFor, string Notify, string DeliverTo, string Remarks, int _UserID, string _Token) {
            base.Channel.Save_RequestHeader(RequestID, RequestStatus, VesselID, RequestDate, DateNeeded, ItemFor, Notify, DeliverTo, Remarks, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_RequestHeaderAsync(int RequestID, string RequestStatus, int VesselID, string RequestDate, string DateNeeded, string ItemFor, string Notify, string DeliverTo, string Remarks, int _UserID, string _Token) {
            return base.Channel.Save_RequestHeaderAsync(RequestID, RequestStatus, VesselID, RequestDate, DateNeeded, ItemFor, Notify, DeliverTo, Remarks, _UserID, _Token);
        }
        
        public void Save_UserAccounts(int UserID, string UserName, string Password, string FirstName, string LastName, int GroupID, string EmailAddress, string Office, int DepartmentID, bool Active, int _UserID, string _Token) {
            base.Channel.Save_UserAccounts(UserID, UserName, Password, FirstName, LastName, GroupID, EmailAddress, Office, DepartmentID, Active, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_UserAccountsAsync(int UserID, string UserName, string Password, string FirstName, string LastName, int GroupID, string EmailAddress, string Office, int DepartmentID, bool Active, int _UserID, string _Token) {
            return base.Channel.Save_UserAccountsAsync(UserID, UserName, Password, FirstName, LastName, GroupID, EmailAddress, Office, DepartmentID, Active, _UserID, _Token);
        }
        
        public void Save_UserGroups(int ID, string GroupName, string Description, bool Active, int _UserID, string _Token) {
            base.Channel.Save_UserGroups(ID, GroupName, Description, Active, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_UserGroupsAsync(int ID, string GroupName, string Description, bool Active, int _UserID, string _Token) {
            return base.Channel.Save_UserGroupsAsync(ID, GroupName, Description, Active, _UserID, _Token);
        }
        
        public void Save_GroupRights(int GroupRightID, int GroupID, int ModuleID, bool CanView, bool CanEdit, bool CanDelete, int _UserID, string _Token) {
            base.Channel.Save_GroupRights(GroupRightID, GroupID, ModuleID, CanView, CanEdit, CanDelete, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_GroupRightsAsync(int GroupRightID, int GroupID, int ModuleID, bool CanView, bool CanEdit, bool CanDelete, int _UserID, string _Token) {
            return base.Channel.Save_GroupRightsAsync(GroupRightID, GroupID, ModuleID, CanView, CanEdit, CanDelete, _UserID, _Token);
        }
        
        public void Save_GroupRights_Requisition(int GroupRightRequestID, int GroupID, int RequestProcessID, bool CanView, bool CanEdit, int _UserID, string _Token) {
            base.Channel.Save_GroupRights_Requisition(GroupRightRequestID, GroupID, RequestProcessID, CanView, CanEdit, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_GroupRights_RequisitionAsync(int GroupRightRequestID, int GroupID, int RequestProcessID, bool CanView, bool CanEdit, int _UserID, string _Token) {
            return base.Channel.Save_GroupRights_RequisitionAsync(GroupRightRequestID, GroupID, RequestProcessID, CanView, CanEdit, _UserID, _Token);
        }
        
        public void Save_Department(int DepartmentID, string DepartmentName, int ManilaApproverID1, int ManilaApproverID2, int GenSanApproverID1, int GenSanApproverID2, int _UserID, string _Token) {
            base.Channel.Save_Department(DepartmentID, DepartmentName, ManilaApproverID1, ManilaApproverID2, GenSanApproverID1, GenSanApproverID2, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_DepartmentAsync(int DepartmentID, string DepartmentName, int ManilaApproverID1, int ManilaApproverID2, int GenSanApproverID1, int GenSanApproverID2, int _UserID, string _Token) {
            return base.Channel.Save_DepartmentAsync(DepartmentID, DepartmentName, ManilaApproverID1, ManilaApproverID2, GenSanApproverID1, GenSanApproverID2, _UserID, _Token);
        }
        
        public void Save_Currency(int CurrencyID, string CurrencyCode, string CurrencyName, int _UserID, string _Token) {
            base.Channel.Save_Currency(CurrencyID, CurrencyCode, CurrencyName, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_CurrencyAsync(int CurrencyID, string CurrencyCode, string CurrencyName, int _UserID, string _Token) {
            return base.Channel.Save_CurrencyAsync(CurrencyID, CurrencyCode, CurrencyName, _UserID, _Token);
        }
        
        public void Save_Supplier(int SupplierID, string SupplierName, string ContactPerson, string ContactNumber, int CurrencyID, string PaymentTerms, string ModeOfPayment, int _UserID, string _Token) {
            base.Channel.Save_Supplier(SupplierID, SupplierName, ContactPerson, ContactNumber, CurrencyID, PaymentTerms, ModeOfPayment, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_SupplierAsync(int SupplierID, string SupplierName, string ContactPerson, string ContactNumber, int CurrencyID, string PaymentTerms, string ModeOfPayment, int _UserID, string _Token) {
            return base.Channel.Save_SupplierAsync(SupplierID, SupplierName, ContactPerson, ContactNumber, CurrencyID, PaymentTerms, ModeOfPayment, _UserID, _Token);
        }
        
        public void Save_VesselDepartment(int VesselID, string VesselCode, string VesselName, string VesselType, string FlagRegistration, bool Active, int _UserID, string _Token) {
            base.Channel.Save_VesselDepartment(VesselID, VesselCode, VesselName, VesselType, FlagRegistration, Active, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_VesselDepartmentAsync(int VesselID, string VesselCode, string VesselName, string VesselType, string FlagRegistration, bool Active, int _UserID, string _Token) {
            return base.Channel.Save_VesselDepartmentAsync(VesselID, VesselCode, VesselName, VesselType, FlagRegistration, Active, _UserID, _Token);
        }
        
        public void Save_FlagRegistration(int FlagID, string FlagName, int _UserID, string _Token) {
            base.Channel.Save_FlagRegistration(FlagID, FlagName, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_FlagRegistrationAsync(int FlagID, string FlagName, int _UserID, string _Token) {
            return base.Channel.Save_FlagRegistrationAsync(FlagID, FlagName, _UserID, _Token);
        }
        
        public void Save_Office(int OfficeID, string OfficeCode, string OfficeName, bool Active, int _UserID, string _Token) {
            base.Channel.Save_Office(OfficeID, OfficeCode, OfficeName, Active, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_OfficeAsync(int OfficeID, string OfficeCode, string OfficeName, bool Active, int _UserID, string _Token) {
            return base.Channel.Save_OfficeAsync(OfficeID, OfficeCode, OfficeName, Active, _UserID, _Token);
        }
        
        public void Save_PageModules(int ModuleID, string ModuleName, string ModuleDescription, string ModuleURL, int _UserID, string _Token) {
            base.Channel.Save_PageModules(ModuleID, ModuleName, ModuleDescription, ModuleURL, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_PageModulesAsync(int ModuleID, string ModuleName, string ModuleDescription, string ModuleURL, int _UserID, string _Token) {
            return base.Channel.Save_PageModulesAsync(ModuleID, ModuleName, ModuleDescription, ModuleURL, _UserID, _Token);
        }
        
        public void Save_PaymentMode(int PaymentModeID, string PaymentModeCode, string PaymentMode, int _UserID, string _Token) {
            base.Channel.Save_PaymentMode(PaymentModeID, PaymentModeCode, PaymentMode, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_PaymentModeAsync(int PaymentModeID, string PaymentModeCode, string PaymentMode, int _UserID, string _Token) {
            return base.Channel.Save_PaymentModeAsync(PaymentModeID, PaymentModeCode, PaymentMode, _UserID, _Token);
        }
        
        public void Save_PaymentTerms(int PaymentTermID, string PaymentTermsCode, string PaymentTerm, int _UserID, string _Token) {
            base.Channel.Save_PaymentTerms(PaymentTermID, PaymentTermsCode, PaymentTerm, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_PaymentTermsAsync(int PaymentTermID, string PaymentTermsCode, string PaymentTerm, int _UserID, string _Token) {
            return base.Channel.Save_PaymentTermsAsync(PaymentTermID, PaymentTermsCode, PaymentTerm, _UserID, _Token);
        }
        
        public void Save_VesselType(int VesselTypeID, string VesselType, int _UserID, string _Token) {
            base.Channel.Save_VesselType(VesselTypeID, VesselType, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task Save_VesselTypeAsync(int VesselTypeID, string VesselType, int _UserID, string _Token) {
            return base.Channel.Save_VesselTypeAsync(VesselTypeID, VesselType, _UserID, _Token);
        }
        
        public bool Validate_Token(int UserID, string TokenID) {
            return base.Channel.Validate_Token(UserID, TokenID);
        }
        
        public System.Threading.Tasks.Task<bool> Validate_TokenAsync(int UserID, string TokenID) {
            return base.Channel.Validate_TokenAsync(UserID, TokenID);
        }
        
        public void Save_TransactionLogs(int UserID, string FormName, string EventName, string ExceptionError, string ComputerName, string IPAddress) {
            base.Channel.Save_TransactionLogs(UserID, FormName, EventName, ExceptionError, ComputerName, IPAddress);
        }
        
        public System.Threading.Tasks.Task Save_TransactionLogsAsync(int UserID, string FormName, string EventName, string ExceptionError, string ComputerName, string IPAddress) {
            return base.Channel.Save_TransactionLogsAsync(UserID, FormName, EventName, ExceptionError, ComputerName, IPAddress);
        }
        
        public void Trails_UserTrails(int UserID, int RequestID, int RequestLineID, string TransType) {
            base.Channel.Trails_UserTrails(UserID, RequestID, RequestLineID, TransType);
        }
        
        public System.Threading.Tasks.Task Trails_UserTrailsAsync(int UserID, int RequestID, int RequestLineID, string TransType) {
            return base.Channel.Trails_UserTrailsAsync(UserID, RequestID, RequestLineID, TransType);
        }
        
        public string Get_UserTrails(string RequestID, int _UserID, string _Token) {
            return base.Channel.Get_UserTrails(RequestID, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_UserTrailsAsync(string RequestID, int _UserID, string _Token) {
            return base.Channel.Get_UserTrailsAsync(RequestID, _UserID, _Token);
        }
        
        public string Get_TransactionLogs(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_TransactionLogs(_Parameter, _UserID, _Token);
        }
        
        public System.Threading.Tasks.Task<string> Get_TransactionLogsAsync(string _Parameter, int _UserID, string _Token) {
            return base.Channel.Get_TransactionLogsAsync(_Parameter, _UserID, _Token);
        }
    }
}
